# include(BoostTestTargets)
# add_boost_test(Independent
#  SOURCES
#  test_Independent.cpp
#  TESTS
#  Independent_suite)

#REDO tests with pipeline C API: add_test(NAME diff_schemes COMMAND test_diff_schemes)
add_test(NAME diff_scheme_impl COMMAND test_diff_scheme_impl)
#REDO tests with pipeline C API: add_test(NAME background_schemes COMMAND test_background_schemes)
add_test(NAME background_scheme_impl COMMAND test_background_scheme_impl)
add_test(NAME lz4_scheme_impl COMMAND test_lz4_scheme_impl)
add_test(NAME lz4_utils_impl COMMAND test_lz4_utils_impl)
add_test(NAME lz4_sandbox COMMAND test_lz4_sandbox)
add_test(NAME string_parsers_impl COMMAND test_string_parsers_impl)

#REDO tests with pipeline C API: add_test(NAME bitswap_schemes COMMAND test_bitswap_schemes)
if(USE_BITSHUFFLE)
add_test(NAME bitshuffle_scheme_impl COMMAND test_bitshuffle_scheme_impl)
endif()
add_test(NAME bitswap_scheme_impl COMMAND test_bitswap_scheme_impl)
add_test(NAME bitplane_reorder_impl COMMAND test_bitplane_reorder_impl)
add_test(NAME bitplane_reorder_on_ramp_impl COMMAND test_bitplane_reorder_on_ramp_impl)

add_test(NAME raster_reorder_scheme_impl COMMAND test_raster_reorder_scheme_impl)
add_test(NAME tile_shuffle_scheme_impl COMMAND test_tile_shuffle_scheme_impl)
add_test(NAME frame_shuffle_scheme_impl COMMAND test_frame_shuffle_scheme_impl)
add_test(NAME zcurve_reorder_scheme_impl COMMAND test_zcurve_reorder_scheme_impl)

add_test(NAME shift_by_intrinsics COMMAND test_shift_by_intrinsics)
add_test(NAME rotate_by_intrinsics COMMAND test_rotate_by_intrinsics)

add_test(NAME hist_impl COMMAND test_hist_impl)
#REDO tests with pipeline C API: add_test(NAME lz4_encoding COMMAND test_lz4_encoding)
add_test(NAME sqeazy_header_impl COMMAND test_sqeazy_header_impl)
add_test(NAME header_tag_impl COMMAND test_header_tag_impl)

add_test(NAME pipeline_interface COMMAND test_pipeline_interface)
add_test(NAME dynamic_pipeline_impl COMMAND test_dynamic_pipeline_impl)
add_test(NAME dynamic_stage_impl COMMAND test_dynamic_stage_impl)
add_test(NAME dynamic_stage_factory_impl COMMAND test_dynamic_stage_factory_impl)
add_test(NAME sqeazy_pipelines_impl COMMAND test_sqeazy_pipelines_impl)
add_test(NAME hdf5_impl COMMAND test_hdf5_impl)
#add_test(NAME bench_utils_impl COMMAND test_bench_utils_impl)
add_test(NAME volume_fixtures COMMAND test_volume_fixtures)
add_test(NAME yuv_utils COMMAND test_yuv_utils WORKING_DIRECTORY ${PROJECT_BINARY_DIR}/tests)
add_test(NAME quantiser_impl COMMAND test_quantiser_impl)

cmake_host_system_information(RESULT CURRENT_HOSTNAME QUERY HOSTNAME)

if(${CURRENT_HOSTNAME} MATCHES ".*(schorle|scicomp-pc-3|recovery-station).*")
message(">> hostname (${CURRENT_HOSTNAME}): added compass test ")
add_test(NAME compass_impl COMMAND test_compass_impl)
endif()

add_test(NAME hdf5_interface COMMAND test_hdf5_interface)
set_tests_properties(hdf5_interface PROPERTIES ENVIRONMENT "HDF5_PLUGIN_PATH=${PROJECT_BINARY_DIR}/src")

if(WIN32)
set_tests_properties(hdf5_interface PROPERTIES ENVIRONMENT "PATH=%PATH%;${PROJECT_BINARY_DIR}/src/${CMAKE_BUILD_TYPE}")
set_tests_properties(hdf5_interface PROPERTIES ENVIRONMENT "LIBRARY_PATH=%LIBRARY_PATH%;${PROJECT_BINARY_DIR}/src/${CMAKE_BUILD_TYPE}")
set_tests_properties(pipeline_interface PROPERTIES ENVIRONMENT "PATH=%PATH%;${PROJECT_BINARY_DIR}/src/${CMAKE_BUILD_TYPE}")
set_tests_properties(pipeline_interface PROPERTIES ENVIRONMENT "LIBRARY_PATH=%LIBRARY_PATH%;${PROJECT_BINARY_DIR}/src/${CMAKE_BUILD_TYPE}")
else(WIN32)
set_tests_properties(hdf5_interface PROPERTIES ENVIRONMENT "LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:${PROJECT_BINARY_DIR}/src")
set_tests_properties(pipeline_interface PROPERTIES ENVIRONMENT "LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:${PROJECT_BINARY_DIR}/src")
endif(WIN32)

add_test(NAME algorithms_impl COMMAND test_algorithms_impl)

#TODO: not used by sqeazy yet and constantly gave problems on OSX
#add_test(NAME huffman_utils_impl COMMAND test_huffman_utils_impl)

#TODO:	hevc decoder in ffmpeg has problems decoding yuv444 in lossless mode
#	https://trac.ffmpeg.org/ticket/4980

#TODO: 8bit encoding broken, only test 16bit roundtrips
if(${WITH_FFMPEG})
#add_test(NAME hevc_scheme_impl COMMAND test_hevc_scheme_impl CONFIGURATION --run_test=avcodec_16bit/*)
add_test(NAME hevc_scheme_impl COMMAND test_hevc_scheme_impl)
add_test(NAME h264_scheme_impl COMMAND test_h264_scheme_impl)
add_test(NAME hevc_scheme_utils COMMAND test_hevc_scheme_utils)
endif()




